package be.uclouvain.organisation.told.util;

import java.util.UUID;

/** 
 * MetaMorphNetInfo holds the essential details of a MetaMorphNetAgent, including its name, model, task,
 * level within the MetaMorphNet hierarchy, and associated platform name. This class supports cloning to facilitate
 * the dynamic evolution and replication of agents across different contexts and tasks within the network, allowing them
 * to adapt and refine their operational models dynamically.
 * 
 * @author Manjahdani
 * @version 0.0.3
 * @date 2024-02-09
 * @mavengroupid be.uclouvain.aptitude
 * @mavenartifactid organisation
 */
class MetaMorphNetInfo implements Cloneable {

	var ID : UUID;
	val name : String;
	var model : String; // Updated to 'model'
	val task : String;
	var level : int;
	var platformName : String;

	new (name : String, model : String, task : String, level : int, platformName : String, id : UUID) {
		this.name = name;
		this.model = model; // Updated to 'model'
        this.task = task;
        this.level = level;
		this.platformName = platformName;
		this.ID = id;
	}

	new (name : String, model : String, task : String, level : int, id : UUID) {
		this.name = name;
		this.model = model; // Updated to 'model'
		this.task = task;
        this.level = level;
		this.ID = id;
	}

	new (name : String, task : String) {
		this.name = name;
		this.model = null; // Updated to 'model'
		this.task = task;
		this.level = -1;
    }

    new (name : String, model : String, task : String, level : int) {
		this.name = name;
		this.model = model; // Updated to 'model'
		this.task = task;
		this.level = level;
	}

	new (name : String, model : String, task : String) {
		this.name = name;
		this.model = model; // Updated to 'model'
		this.task = task;
		this.level = 0;
	}

	new (name : String, task : String, level : int) {
		this.name = name;
        this.model = null; // Updated to 'model'
		this.task = task;
		this.level = level;
	}

	def setLevel(level : int) : void {
		this.level = level;
	}

	def getID {
        return this.ID;
    }

	def setID(id : UUID) {
		this.ID = id;
	}

	def getLevel {
		return this.level;
	}

	def getFullName {
		return this.name.concat("_").concat(level.toString());
	}

	def setPlatformName(platformName : String) {
		this.platformName = platformName;
	}

	def getPlatformName {
		return this.platformName;
	}

	def getName {
        return this.name;
    }

    def getModel {
        return this.model;
	}

	def getTask {
		return this.task;
	}

	def incrementLevel {
		this.level += 1;
	}

	/** 
	 * Supports cloning for agent replication with adaptation to new contexts or tasks,
	 * allowing the dynamic evolution of models.
	 */
	def cloneChildWithID() {
		return this.clone();
	}

	def cloneChildWithID(childID : UUID) {
		return this.clone().newClone(childID);
    }

    def newClone(id : UUID) {
        incrementLevel();
		setID(id);
		return this;
	}
}
