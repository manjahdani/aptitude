/**  
 */
package be.uclouvain.organisation.events

import io.sarl.lang.core.AgentContext

/** 
 * Generic event to invites the receiver to join an organisation context 
 * The source is usually the Holon that is the organisation
 * 
 * <h4>For an Agent</h4>
 * This event is received by the holon that previously requested to join the context .
 * 
 * <h4>For a Behavior</h4>
 * Multiple behaviors
 * 
 * <h4>For a Skill</h4>
 * No skill receives this event.
 * 
 * <h4>For Agent Members</h4>
 * The member agents do not receive this event from the parent agent because they are not yet created when the agent is spawned.@TODO "It's not clear, I do think that the sub-members should get it. 
 * 
 * @author $Author: manjahdani$
 * @version $0.0.1$
 * @date $31/03/2021$
 * @mavengroupid $be.uclouvain.aptitude$
 * @mavenartifactid $organisation$
 */
event JoinOrganisation {
	
	val contextID : AgentContext 
	
	new (ctxt : AgentContext) {
		this.contextID = ctxt
	}
}


event JoinPlatform extends JoinOrganisation {

	val location : String
	new (ctxt : AgentContext, platformName : String) {
		super(ctxt)
		this.location=platformName
	}
}

