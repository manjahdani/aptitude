/** 
 * 
 */
package be.uclouvain.organisation.platform

import io.sarl.core.Logging
import be.uclouvain.organisation.told.LeavePlatform
import io.sarl.core.OpenEventSpace
import java.util.UUID
import be.uclouvain.organisation.told.JoinPlatform
import io.sarl.core.DefaultContextInteractions
import io.sarl.core.ExternalContextAccess
import io.sarl.core.Initialize
import io.sarl.core.Behaviors

/** 
 * @author manjah
 * 
 */
behavior ObserverRole {
	uses Logging, ObserverCapacity, DefaultContextInteractions, ExternalContextAccess, Logging,Behaviors

	protected var PlatformSpace : OpenEventSpace
	protected var PlatformID : UUID

	protected var ExpertID : UUID
	
	on Initialize{
		info("My Observer Role started")
	}
	on LeavePlatform {
		// join(BaseContext.ID, BaseSpace.spaceID.ID)
		leave(PlatformID)
	}
	//on JoinPlatform {
		//join(occurrence.contextID.getID, occurrence.DefaultSpaceID.getSpaceID.getID)
		//occurrence.DefaultSpaceID.register(asEventListener)
	//}
}
