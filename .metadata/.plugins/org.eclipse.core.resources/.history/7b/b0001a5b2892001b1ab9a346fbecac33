/** 
 * 
 */
package be.uclouvain.organisation.platform

import io.sarl.lang.core.AgentContext
import io.sarl.core.OpenEventSpace
import java.util.UUID

/** 
 * The event answers positively to the request of an holon to join another holon's context.
 * The source of this event is the holon that has been requested.
 * 
 * <h4>For an Agent</h4>
 * This event is received by the agent's native behavior when the agent is spawned.
 * 
 * <h4>For a Behavior</h4>
 * Each Behavior instance within the agent receives this event when it is registered for the first time.
 * 
 * <h4>For a Skill</h4>
 * No skill receives this event.
 * 
 * <h4>For Agent Members</h4>
 * The member agents do not receive this event from the parent agent because they are not yet created when the agent is spawned.
 * 
 * @author $Author: manjahdani$
 * @version $0.1$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */

event AuthorizationToJoin {

	val contextID : AgentContext
	val defaultSpaceID : OpenEventSpace
	val entityID : UUID
	val sensitivity : Integer

	new (context : AgentContext, Space : OpenEventSpace, id : UUID, sensitivity : Integer) {
		this.contextID = context
		this.defaultSpaceID = Space
		this.entityID = id
		this.sensitivity=sensitivity
	}
}
