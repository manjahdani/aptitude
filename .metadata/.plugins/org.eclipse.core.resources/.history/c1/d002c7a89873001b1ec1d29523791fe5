/** 
 * 
 */
package be.uclouvain.aptitudeAgents

import be.uclouvain.organisation.interactivity.element.ElementCapacity
import io.sarl.core.Initialize
import io.sarl.core.Logging
import io.sarl.lang.core.EventSpace
import java.util.ArrayList
import java.util.TreeMap
import java.util.UUID
import io.sarl.core.Behaviors
import be.uclouvain.organisation.told.EntityRole
import io.sarl.core.Lifecycle
import io.sarl.core.InnerContextAccess

/** 
 * @author manjah
 * 
 */
agent User extends Paraddis{
	uses Logging, Behaviors, Lifecycle, InnerContextAccess
	
	on Initialize {
		loggingName = "UserInterface-" + this.ID
		info("agent started.")
		setSkill(
			new UserSkill(occurrence.parameters.get(2).toString), DeviceCapacity,ElementCapacity)
		registerBehavior(new UserRole(this), occurrence.parameters.get(0) as TreeMap<UUID, EventSpace>,
			occurrence.parameters.get(1) as ArrayList<UUID>)
			
			
		spawnInContext(Expert, innerContext, occurrence.parameters.get(0) as TreeMap<UUID, EventSpace>, occurrence.parameters.get(0) as ArrayList<UUID>)	
		
	}
}
