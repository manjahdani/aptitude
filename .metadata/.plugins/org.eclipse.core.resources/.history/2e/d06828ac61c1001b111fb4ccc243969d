/** 

 */
package be.uclouvain.aptitude.surveillance

import io.sarl.core.Behaviors
import io.sarl.core.Initialize
import io.sarl.core.InnerContextAccess
import io.sarl.core.Lifecycle
import io.sarl.core.Logging
import io.sarl.lang.core.EventSpace
import java.util.TreeMap
import java.util.UUID

import be.uclouvain.organisation.platform.util.PlatformConfig
import be.uclouvain.organisation.platform.PlatformRole
import be.uclouvain.aptitude.surveillance.ui.UserInterface
import be.uclouvain.organisation.platform.PlatformSkill
import be.uclouvain.organisation.platform.PlatformCapacity

/**
 * 
 * @FIXME It is not clear whether for sub-platforms the agent should play the role of TOLD as well ? 
 * Or do we need, another agent ??? The way we do it, is quite unclear... Because, it reveils the 
 * 
 * 
 * @author $Author: manjahdani$
 * @version $0.0.1$
 * @date $31/03/2021$
 * @mavengroupid $be.uclouvain.aptitude$
 * @mavenartifactid $organisation$
 */

agent PlatformAgent extends Paraddis {

	uses Logging, Behaviors, InnerContextAccess, Lifecycle

	val subPlatformSpaceIDs = new TreeMap<UUID, EventSpace> // TreeMap of the sub-worlds composing the world. It is used to be able to communicate with other worlds

	on Initialize {
		val platformConfig = occurrence.parameters.get(0) as PlatformConfig

		loggingName = "Platform-" + platformConfig.getLevel() + "-" + this.ID
		for (swc : platformConfig.subPlatformConfig) {
			val randomID = UUID.randomUUID
			spawnInContextWithID(PlatformAgent, randomID, innerContext, swc)
			subPlatformSpaceIDs.put(randomID, innerContext.getDefaultSpace)
		}
		if (platformConfig.getLevel > 0) {
			
			setSkill(new PlatformSkill(platformConfig), PlatformCapacity)
			registerBehavior(new PlatformRole(this, platformConfig.getLocation))
			info("Ready to receive operating mission")
			spawn(TOLDAgent) 		// @FIXME IT is not clear !!! 
		} else {
			//setSkill(new WorldSkill(WorldConfig), WorldCapacity)
			//registerBehavior(new WorldRole(this))
			spawn(UserInterface, subPlatformSpaceIDs) //@FIXME it is okay, to pass this argument? One needs to check.  
		}
	}

}
