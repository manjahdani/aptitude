/** 
 * 
 */
package be.uclouvain.organisation.platform

import be.uclouvain.organisation.told.AddEntity
import io.sarl.core.Behaviors
import io.sarl.core.ExternalContextAccess
import io.sarl.core.Initialize
import io.sarl.core.InnerContextAccess
import io.sarl.core.Logging
import io.sarl.core.MemberJoined
import io.sarl.core.OpenEventSpace
import io.sarl.core.OpenEventSpaceSpecification
import java.util.UUID
import be.uclouvain.organisation.OrganisationInfo
import io.sarl.core.DefaultContextInteractions

/** 
 * @author manjah
 * 
 */
behavior PlatformRole {
	uses PlatformCapacity, Behaviors, InnerContextAccess, ExternalContextAccess, Logging, DefaultContextInteractions

	protected var PlatformInteractivitySpace : OpenEventSpace
	protected var PlatformTOLDSpace : OpenEventSpace

	on Initialize {
		// Event trigger before the behavior begin to live or to be used.
		// You should put all the initialization statements in this block of code.
		info("The platform behavior started.")
	}

	



	on Initialize {
		this.PlatformInteractivitySpace = innerContext.getOrCreateSpaceWithID(OpenEventSpaceSpecification,
			UUID.randomUUID) // Space for the communication between a World and Poppies
		this.PlatformTOLDSpace = innerContext.getOrCreateSpaceWithID(OpenEventSpaceSpecification, UUID.randomUUID) // Space for the communication between Unity and the World
		PlatformInteractivitySpace.register(asEventListener)
		PlatformTOLDSpace.register(asEventListener)
	}

	on AddEntity {
		// RuleManagement(new MembershipInfoRule(occurrence.source, occurrence.SourceEventSpace, occurrence.entityData))
		if (true) {
			emit(occurrence.SourceEventSpace,
				new AuthorizationToJoin(innerContext, innerContext.getDefaultSpace as OpenEventSpace, occurrence.source.getUUID, occurrence.entityData))[it.UUID == occurrence.source.getUUID]
		}
	}

	on MemberJoined {
		info("I see " +occurrence.agentType)
		
		if (occurrence.agentType == "be.uclouvain.aptitudeAgentsTOLDAgent") {
			emit(new OrganisationInfo(defaultContext, PlatformTOLDSpace))[it.UUID == occurrence.agentID]
		} 
		else if (occurrence.agentType == "be.uclouvain.aptitudeAgents.Expert") {
			ConditionActivation
			wake(new OrganisationInfo(innerContext, PlatformTOLDSpace))[it.UUID == occurrence.agentID]
		}
	}

}
