/** 
 * 
 */
package be.uclouvain.organisation.platform

import be.uclouvain.organisation.platform.util.PlatformConfig
import io.sarl.core.InnerContextAccess
import be.uclouvain.organisation.told.util.AlgorithmInfo
import java.util.LinkedList

/** 
 * @author manjah
 * 
 */
skill PlatformSkill implements PlatformCapacity {
	uses InnerContextAccess

	protected val WC : PlatformConfig
	
	val ObserversList = new LinkedList<String> 
	
	new(wc : PlatformConfig) {
		this.WC=wc
	}

	def RuleManagement(info : Object) : boolean {
		if (info instanceof MembershipRule){
			return ObserversList.contains(info.m1.concat(info.m2))
		}
		else {
			throw new UnsupportedOperationException("Unknown Rule")
		}

	}

	def getPlatformConfig : PlatformConfig {
		return this.WC
	}

	override ConditionActivation {
		// TODO Auto-generated code.
	}
}
