/** 

 */
package be.uclouvain.aptitude.surveillance.user

import UDPMessages.ActorStats
import UDPMessages.CharacterData
import UDPMessages.ObjectData
import UDPMessages.ScreenData
import UDPMessages.SpawnAuthorizations
import UDPMessages.SpawnCharacterAuthorization
import UDPMessages.SpawnObjectAuthorization
import UDPMessages.UDP_Message_AckAuthenticateMobile
import UDPMessages.UDP_Message_Base
import UDPMessages.UDP_Message_UpdateInventory
import be.uclouvain.organisation.interactivity.outputDevice.OutputMsg
import io.sarl.core.DefaultContextInteractions

/** 
 * 
 * 
 */
skill UserSkill implements UserElementCapacity {

	uses DefaultContextInteractions


	val playerID : String

	new (userID : String) {
		this.playerID = userID
	}
	def synchronized outputSend(msgOut : UDP_Message_Base) {
		emit(new OutputMsg(msgOut))
	}

	def updateBehavior(cd : CharacterData[]) {
		outputSend(new UDP_Message_UpdateInventory(playerID, cd, getObjectList))
	}

	def getObjectList {
		var objectsList : ObjectData[] = newArrayOfSize(1);
		objectsList.set(0, new ObjectData(this.ID.toString, 1, 0))
		return objectsList
	}
	
	def InformationAnalysis(msg : UDP_Message_Base) {
		
	}

	def setupPhysicalDevice(cd : CharacterData[]) {

		var objectsAuthorizations : SpawnObjectAuthorization[] = newArrayOfSize(4)
		objectsAuthorizations.set(0, new SpawnObjectAuthorization(1, true))
		objectsAuthorizations.set(1, new SpawnObjectAuthorization(2, true))
		objectsAuthorizations.set(2, new SpawnObjectAuthorization(3, false))
		objectsAuthorizations.set(3, new SpawnObjectAuthorization(4, false))

		var charactersAuthorizations : SpawnCharacterAuthorization[] = newArrayOfSize(2)
		charactersAuthorizations.set(0, new SpawnCharacterAuthorization(0, true))
		charactersAuthorizations.set(1, new SpawnCharacterAuthorization(1, true))

		var spawnAuthorization = new SpawnAuthorizations(false, true, charactersAuthorizations, objectsAuthorizations)
		spawnAuthorization.areCharactersSpawnable = true;

		var screen1 = new ScreenData(0, 1, spawnAuthorization)
		var screen2 = new ScreenData(1, 0, spawnAuthorization)
		var screens : ScreenData[] = newArrayOfSize(2)
		screens.set(0, screen1)
		screens.set(1, screen2)

		var allStats : ActorStats[] = newArrayOfSize(1)
		allStats.set(0, new ActorStats(this.ID.toString, "20"))

		outputSend(new UDP_Message_AckAuthenticateMobile(playerID, cd, getObjectList, allStats, screens))

	}
	
}
