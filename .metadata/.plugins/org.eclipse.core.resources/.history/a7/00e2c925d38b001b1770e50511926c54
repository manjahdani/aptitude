/** 
 * @Name       : ObserverRole
 * @Project    : APTITUDE
 * @Author     : Dani Manjah
 * @Version    : V.0.1 
 * @Date       : 22/03/2021 
 */
package be.uclouvain.organisation.platform

import io.sarl.core.Destroy
import io.sarl.core.Initialize
import io.sarl.core.Logging
import java.util.UUID
import io.sarl.core.OpenEventSpace
import be.uclouvain.organisation.OrganisationInfo
import io.sarl.core.Behaviors
import io.sarl.lang.core.AgentContext
import io.sarl.core.DefaultContextInteractions
import java.util.concurrent.atomic.AtomicInteger

/** 
 * 
 * 
 */
behavior ObserverRole {
	uses Logging, Behaviors, DefaultContextInteractions

	protected var TOLDSpace : OpenEventSpace
	protected var TOLDID : UUID
	protected var PlatformContext : AgentContext

	protected var observerID : UUID
	protected var sensitivity = new AtomicInteger()
	
	on Initialize {
		synchronized(observerID)
		observerID = occurrence.parameters.get(1) as UUID
	}

	on Destroy {
		info("The behavior was stopped.")
	}

	on OrganisationInfo {
		//info("Joining the Platform organisation: " + occurrence.spaceID + " (" + occurrence.context + ").")
		synchronized (PlatformContext)
		PlatformContext = occurrence.context
		synchronized (TOLDID)
		TOLDID = occurrence.source.getUUID
		synchronized (TOLDSpace)
		TOLDSpace = occurrence.spaceID
		synchronized (TOLDSpace)
		TOLDSpace.register(asEventListener)
		synchronized (observerID)
		emit(new SensititvityRequest)[it.UUID==observerID]
	}

	on SensititvityRequest {
		info("Thank you for joining the mission. Please use the following sensitivity" + sensitivity)
		//info("I received A Sensititivy Request" + occurrence.source.UUID)
		emit(new MissionSensitivity(sensitivity)
		)[it.UUID == occurrence.source.UUID]
	}
	
	
	//	on LeavePlatform {
//		// join(BaseContext.ID, BaseSpace.spaceID.ID)
//		info("ObserverLeaving")
//		leave(PlatformID)
//	}
}
