/** 
 * 
 */
package be.uclouvain.aptitudeAgents

import io.sarl.core.Initialize
import io.sarl.core.InnerContextAccess
import io.sarl.core.Lifecycle
import io.sarl.core.Logging
import java.util.TreeMap
import be.uclouvain.organisation.told.JoinPlatform
import io.sarl.core.DefaultContextInteractions
import be.uclouvain.organisation.told.TOLDRole
import io.sarl.core.Behaviors

/** 
 * @author manjah
 * 
 */
agent TOLDAgent {
	uses Logging, Lifecycle, InnerContextAccess, DefaultContextInteractions,Behaviors

 	val AlgorithmDatabase : TreeMap<String,String> = new TreeMap<String,String>
	
	
	// configPath
 	
	on Initialize {
		// Event trigger before the agent begin to live or to be used.
		// You should put all the initialization statements in this block of code.
		info("TOLD agent was started.")
		AlgorithmDatabase.put("YOLO", "F:/aptitude/aptitude-agents/src/main/resources/config/test-YOLO.json")
		AlgorithmDatabase.put("TinyYOLO","F:/aptitude/aptitude-agents/src/main/resources/config/test-TinyYOLO.json")
		AlgorithmDatabase.put("SORT", "F:/aptitude/aptitude-agents/src/main/resources/config/test-SORT.json")
		AlgorithmDatabase.put("DeepSORT", "F:/aptitude/aptitude-agents/src/main/resources/config/test-DeepSORT.json")
		loggingName = "TOLD-" + this.ID
		
		for(k : AlgorithmDatabase.keySet){
			spawn(Algorithm,k,0)
		}
		registerBehavior(new TOLDRole(this))
		
	}
	on JoinPlatform {
		emit(new JoinPlatform(occurrence.contextID,occurrence.DefaultSpaceID))
	}




}
