/** 
 * 
 */
package be.uclouvain.aptitude.surveillance

import be.uclouvain.organisation.util.HolonicConfig
import io.sarl.lang.core.AgentContext
import java.util.ArrayList
import java.util.LinkedList
import java.util.Collections
import java.util.List

/** 
 * @author manjah
 * 
 */
class TOLDConfig extends HolonicConfig {
	
	var parentContext : AgentContext
	var init_tasks : ArrayList<String>
	val subTOLDConfig = new LinkedList<TOLDConfig>
	var accountablePlatform : String 
	
	new (l : int, platformName : String, parent : AgentContext, init_tasks : ArrayList<String>){
		
		super(l)
		this.parentContext = parent
		this.init_tasks=init_tasks
		this.accountablePlatform =  platformName
	}
	
	def getAccountablePlatform{
		
		return accountablePlatform
	}
	def getParentContext {
		return parentContext
	}
	def getInit_tasks {
		return init_tasks
	}

	def addSubTOLD(wc : TOLDConfig) : void {
		this.subTOLDConfig.add(wc)
	}

	def removeSubPlatform(wc : TOLDConfig) : void {
		this.subTOLDConfig.remove(wc)
	}

	def getSubTOLDConfig() : List<TOLDConfig> {
		return Collections.synchronizedList(this.subTOLDConfig)
	}
}
