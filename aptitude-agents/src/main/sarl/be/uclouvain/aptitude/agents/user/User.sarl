/** 
 * @Name       : PlatformRole
 * @Project    : APTITUDE
 * @Author     : Dani Manjah
 * @Version    : V.0.1 
 * @Date       : 22/03/2021 
 */
package be.uclouvain.aptitude.agents.user

import be.uclouvain.aptitude.agents.Paraddis
import be.uclouvain.organisation.interactivity.element.ElementCapacity
import io.sarl.core.Behaviors
import io.sarl.core.Initialize
import io.sarl.core.Logging
import io.sarl.lang.core.EventSpace
import java.util.ArrayList
import java.util.TreeMap
import java.util.UUID

/** 
 * The Holon User represents an agent that want to use/used the system. 
 * A User could a be a group of user. 
 * We established that in order to interact with the system, each User owns User Interface in order to provide input to the system and receives output. 
 * The agent User keep tracks of the records of the user(s) and is responsible, of updating the universe and manage the in/out of virtual and real users. 
 * It is also responsible of establishing the connection between the virtual/real user and the system. It endorses the roles of Element and their associated capacities. 
 * */

agent User extends Paraddis{
	uses Logging, Behaviors
	
	on Initialize {
		loggingName = "UserInterface-" + this.ID
		info("agent started.")
		setSkill(
			new UserSkill(occurrence.parameters.get(2).toString), UserElementCapacity,ElementCapacity)
		registerBehavior(new UserRole(this), occurrence.parameters.get(0) as TreeMap<UUID, EventSpace>,
			occurrence.parameters.get(1) as ArrayList<UUID>)
	}
}
