/** 
 * 
 */
package be.uclouvain.aptitude.surveillance.ui

import be.uclouvain.aptitude.surveillance.Paraddis
import be.uclouvain.organisation.interactivity.inputDevice.InputDeviceCapacity
import be.uclouvain.organisation.interactivity.inputDevice.InputDeviceRole
import be.uclouvain.organisation.interactivity.outputDevice.OutputDeviceCapacity
import be.uclouvain.organisation.interactivity.outputDevice.OutputDeviceRole
import io.sarl.core.Behaviors
import io.sarl.core.Destroy
import io.sarl.core.Initialize
import io.sarl.core.Logging
import io.sarl.core.OpenEventSpace
import io.sarl.lang.core.EventSpace
import java.util.TreeMap
import java.util.UUID

/** 
 * @TODO: write a description
 * 
 * @author $Author: manjahdani$
 * @version $0.0.1$
 * @date $31/03/2021$
 * @mavengroupid $be.uclouvain.aptitude$
 * @mavenartifactid $surveillance$
 * 
 */
agent UserInterface extends Paraddis {
	uses Logging, Behaviors

	protected var TOLDInteractivitySpace : OpenEventSpace
	
	on Initialize {
		loggingName = "UserInterface-" + this.ID
		info("Ready to receive external inputs")	
		var s = setSkill(new DeviceNetworkManagerSkill(65001, occurrence.parameters.get(0) as TreeMap<UUID, EventSpace>),
					InputDeviceCapacity)
		registerBehavior(new InputDeviceRole(this))
		setSkill(new MobileOutputSkill(s.getMobileAddress), OutputDeviceCapacity)
		registerBehavior(new OutputDeviceRole(this))
		}
	on Destroy{
		info("The agent is destroyed")
	}
}
