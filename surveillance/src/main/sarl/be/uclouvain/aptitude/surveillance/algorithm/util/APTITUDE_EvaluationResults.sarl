/** 
 * 
 */
package be.uclouvain.aptitude.surveillance.algorithm.util

import be.uclouvain.aptitude.surveillance.algorithm.util.EvaluationResults
import java.util.UUID
import be.uclouvain.organisation.platform.util.HyperParameters

/** 
 * @author manjah
 * 
 */
class APTITUDE_EvaluationResults extends EvaluationResults implements Comparable<APTITUDE_EvaluationResults> {
	
	public val detector : String
	public val tracker : String
	public val multi : boolean
	public val cautionLevel : int
	public val total_time  : double
	public val fps_detection : double
	public val fps_tracking : double
	public val fps_total : double
	public var efficiency : double 
	public var APTITUDE_score : double
	
	new (pid : UUID, id : UUID, s : String, det : String, track:String, dt : double, tt : double, f : int, hp :HyperParameters){
		super(pid,id,s,dt,tt,f)
		this.detector= det
		this.tracker=track
		this.multi=hp.dynamicAdaptationEnabled.get
		this.cautionLevel = hp.cautionLevel.get
		this.total_time = dt+tt
		this.fps_detection=f/dt
		this.fps_tracking= f/tt
		this.fps_total = f/this.total_time
		
	}
	
	def updateMetrics {
		this.efficiency = (0.51 - 2 * this.fps_total) / (0.49)
		this.APTITUDE_score = this.HOTA + this.cautionLevel * this.efficiency
	}
	def compareTo(o : APTITUDE_EvaluationResults) : int {
		if(APTITUDE_score > o.APTITUDE_score){
			return 1
		}
		else{
			return -1
		}

	}
}
