/** 
 * 
 */
package be.uclouvain.aptitude.surveillance.algorithm.detector

import be.uclouvain.aptitude.surveillance.algorithm.Algorithm
import be.uclouvain.aptitude.surveillance.algorithm.BecomeManager
import be.uclouvain.aptitude.surveillance.algorithm.RoleRegistered
import io.sarl.core.Behaviors
import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Logging
import be.uclouvain.aptitude.surveillance.algorithm.detector.events.AddMissionAsDetector
import be.uclouvain.aptitude.surveillance.algorithm.detector.events.AddMissionAsActivityDetector

/** 
 * @author manjah
 * 
 */
agent Detector extends Algorithm {
	uses Behaviors, DefaultContextInteractions,Logging
	
	on BecomeManager {
		debug("Becoming Manager")
		registerBehavior(new CooperativeLowDensityDetectorObserverRole(this), ADN.get)
		registerBehavior(new ManagerDetectorSensorRole(this), ADN.get)
		emitToParent(new RoleRegistered)
	}
	on AddMissionAsActivityDetector {
		debug("Becoming Student Atomic")
		registerBehavior(new ActivityDetectorSensorRole(this), ADN.get)
		registerBehavior(new DetectorObserverRole(this), ADN.get)
		emitToParent(new RoleRegistered)
	}

	on AddMissionAsDetector {
		warning("Normal Detector Role")
		registerBehavior(new DetectorSensorRole(this), ADN.get)
		registerBehavior(new DetectorObserverRole(this), ADN.get)
		emitToParent(new RoleRegistered)
	}	
}
