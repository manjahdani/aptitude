/** 
 * 
 */
package be.uclouvain.aptitude.surveillance.algorithm

import be.uclouvain.organisation.told.DataEntry
import be.uclouvain.organisation.told.QueryAnswer
import be.uclouvain.organisation.told.ReadEntry
import be.uclouvain.organisation.told.entity.EntityRole
import io.sarl.core.Logging
import java.io.File
import java.io.FileWriter
import be.uclouvain.organisation.told.AddEntry
import be.uclouvain.organisation.TOLDOrganisationInfo
import be.uclouvain.aptitude.surveillance.algorithm.tracker.TrackingPerception

/** 
 * @author manjah
 * 
 */
behavior AlgorithmEntity extends EntityRole {
	
	uses Logging

	var predfile = new File("F:\\Database\\".concat(this.ID.toString) + ".txt")

	on TOLDOrganisationInfo {
		info("Creating new file to register prediction")
		occurrence.privateCommunicationChannel.emit(this.ID, new AddEntry(this.ID, new FileWriter(predfile)))
	}
	on TrackingPerception {
		//info("receives tracking")
		TOLDSpace.emit(this.ID,new DataEntry(this.ID,occurrence.perceptions))
	}
	on LastFrame {
		TOLDSpace.emit(this.ID, new ReadEntry(this.ID))
	}
	on QueryAnswer{
		(occurrence.answerObject as FileWriter).close
	}
}


/*
 * predfile = new File("F:\\" +"Final".concat(platformName).concat(this.ID.toString) + ".txt")
 * gt = new FileWriter(predfile)
 * 
 * predfile = new File("F:\\" + DetectorName.concat(observerADN.name).concat(platformName).concat(this.ID.toString) + ".txt")
 * gt = new FileWriter(predfile)
 */