/** 
 * 
 */
package be.uclouvain.aptitude.surveillance

import com.google.common.util.concurrent.AtomicDouble
import java.util.concurrent.atomic.AtomicInteger
import be.uclouvain.organisation.AgentPerformance

/** 
 * @author manjah
 * 
 */
skill MeasureAgentPerformance implements AgentPerformance {
	
	val totalTime = new AtomicDouble(0)
	val numberMessages = new AtomicInteger(0)
	
	def accumulateTime(t : double) {
		totalTime.addAndGet(t)
	}
	
	def incrementMessage {
		numberMessages.incrementAndGet	
	}
	
	def getProcessingTime : double {
		return totalTime.get/1E9 // in seconds
	}
	
	def getMessages : int {
		return numberMessages.get
	}
	
}
