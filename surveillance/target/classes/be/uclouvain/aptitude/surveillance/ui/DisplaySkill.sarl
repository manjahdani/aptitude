/** 
 * 
 */
package be.uclouvain.aptitude.surveillance.ui

import be.uclouvain.python_access.CommunicationManager
import be.uclouvain.python_access.messages.BBoxes2DTrackMessage
import be.uclouvain.python_access.messages.BaseMessage
import be.uclouvain.python_access.messages.DisplayMessage
import io.sarl.core.AgentTask
import be.uclouvain.python_access.PythonTwinAccess

/** 
 * @author manjah
 * 
 */
skill DisplaySkill extends PythonTwinAccess implements DisplayCapacity {
	

	var topicDisplaySub : String

	var pendingRequestID : String
	var requestTask : AgentTask

	override def install {
		topicDisplaySub = CommunicationManager.instance.subscribeTopic("display", this)
	}

	override def uninstall {
		if (topicDisplaySub !== null) {
			CommunicationManager.instance.unsubscribeTopic(topicDisplaySub)
			topicDisplaySub = null
		}
	}

	def sendDisplayMessage(bboxes2dTrack : BBoxes2DTrackMessage, streamID : String, streamPath : String, roi : String,
		countingLines : int[], counts : int[], name : String, observer : String, sensitivity : int) {
		var displayMessage = new DisplayMessage(bboxes2dTrack)
		displayMessage.streamID = streamID
		displayMessage.streamPath = streamPath
		displayMessage.countingLines = countingLines
		displayMessage.counts = counts
		displayMessage.name = name
		displayMessage.observer = observer
		displayMessage.sensitivity = sensitivity
		if (roi !== null)
			displayMessage.roiPath = roi
		CommunicationManager.instance.publishMessage(topicDisplaySub, displayMessage)
	}


	def update(m : BaseMessage) {
		throw new UnsupportedOperationException("TODO: auto-generated method stub")
	}
}
