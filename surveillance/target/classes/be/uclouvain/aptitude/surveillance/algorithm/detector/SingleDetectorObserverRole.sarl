/** 
 * 
 */
package be.uclouvain.aptitude.surveillance.algorithm.detector

import be.uclouvain.aptitude.surveillance.algorithm.PythonTwinObserverRole
import be.uclouvain.python_access.PartnerDetectionFound
import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Logging
import io.sarl.core.Schedules
import java.util.UUID

/** 
 * @author manjah
 * 
 * /* 
 * PLAY = 1
 * PAUSE = 2
 * RESUME = 3
 * STOP = 4
 * RESTART = 5
 * SEEK = 6
 * KILL = 7
 * 
 * 
 * 
 */
behavior SingleDetectorObserverRole extends PythonTwinObserverRole {
	uses Logging, Schedules, DefaultContextInteractions

	on PartnerDetectionFound {
		info("Detection partner found: " + occurrence.partnerName)
		task("wait").in(2000) [
			emitToParent(new PartnerDetectionFound(occurrence.partnerName))
			task("wait").cancel // PLAY
		]
	}
	
	override processingMissionWithID(mID : UUID) {
		setSkill(new DetectorPythonTwin(ADN.get.belief, ADN.get.platformName, computation_location.get))
	}
	
}
