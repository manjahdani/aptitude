/** 
 * 
 */
package be.uclouvain.aptitude.surveillance.algorithm.detector

import be.uclouvain.aptitude.surveillance.algorithm.Algorithm
import be.uclouvain.aptitude.surveillance.algorithm.BecomeManager
import be.uclouvain.aptitude.surveillance.algorithm.RoleRegistered
import be.uclouvain.aptitude.surveillance.algorithm.detector.events.AddMissionAsMaster
import be.uclouvain.aptitude.surveillance.algorithm.detector.events.AddMissionAsStudent
import io.sarl.core.Behaviors
import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Logging

/** 
 * @author manjah
 * 
 */
agent Detector extends Algorithm {
	uses Behaviors, DefaultContextInteractions,Logging
	
	on BecomeManager {
		info("Becoming Manager")
		registerBehavior(new CooperativeMasterStudentDetectorsObserverRole(this), ADN.get)
		registerBehavior(new ManagerDetectorSignalRole(this), ADN.get)
		emitToParent(new RoleRegistered)
	}
	on AddMissionAsStudent {
		info("Becoming Student Atomic")
		registerBehavior(new ActivityDetectorSignalRole(this), ADN.get)
		registerBehavior(new SingleDetectorObserverRole(this), ADN.get)
		emitToParent(new RoleRegistered)
	}

	on AddMissionAsMaster {
		info("Becoming Master Atomic")
		registerBehavior(new DetectorSignalRole(this), ADN.get)
		registerBehavior(new SingleDetectorObserverRole(this), ADN.get)
		emitToParent(new RoleRegistered)
	}
	
}
