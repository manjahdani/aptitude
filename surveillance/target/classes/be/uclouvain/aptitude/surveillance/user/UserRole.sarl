/** 

 */
package be.uclouvain.aptitude.surveillance.user

import be.uclouvain.organisation.interactivity.element.ElementRole
import be.uclouvain.organisation.platform.util.SurveillanceMissionData
import be.uclouvain.organisation.told.events.AuthorizedMission
import be.uclouvain.organisation.told.events.NewMission
import io.sarl.api.core.Behaviors
import io.sarl.api.core.Logging

/** 
 * UserRole, derived from Element, is tailored to human users communicating with the system
 * through an input machine.
 * 
 *  
 * 
 * @author $Author: manjahdani$
 * @version $0.0.3$
 * @date $11/02/2022$
 * @mavengroupid $be.uclouvain.aptitude$
 * @mavenartifactid $Surveillance$
 * 
 */
behavior UserRole extends ElementRole {

	uses Behaviors, Logging
	

	on AuthorizedMission {
		info("receives authorisation for mission")
		val mission = new SurveillanceMissionData(
			occurrence.mission.missionID,
			occurrence.mission.clientID,
			occurrence.platformOpenChannel.spaceID.contextID,
			occurrence.mission.cautionLevel.get,
			occurrence.mission.dynamicAdaptationEnabled
		) // @FIXME HIGH we copy because occurrence.platformOpenChannel is null and its due to another fixme in UserSkill
		wake(
			new NewMission(mission, occurrence.platformOpenChannel, occurrence.location)) [
			it.ID == occurrence.mission.clientID
		]
	}
} 