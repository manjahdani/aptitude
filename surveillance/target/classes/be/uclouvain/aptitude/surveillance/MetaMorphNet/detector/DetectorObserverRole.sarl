/** 
 * 
 */
package be.uclouvain.aptitude.surveillance.MetaMorphNet.detector

import be.uclouvain.python_access.PartnerDetectionFound

import java.util.UUID
import be.uclouvain.organisation.AgentPerformance
import io.sarl.api.core.Schedules
import io.sarl.api.core.DefaultContextInteractions
import be.uclouvain.aptitude.surveillance.MetaMorphNet.PythonTwinObserverRole

/** 
 * @author manjah
 * 
 */
behavior DetectorObserverRole extends PythonTwinObserverRole {
	uses Schedules, DefaultContextInteractions, AgentPerformance

	on PartnerDetectionFound {
		//info("Detection partner found: " + occurrence.partnerName)
		task("wait").in(2000) [
			emitToParent(new PartnerDetectionFound(occurrence.partnerName))
			task("wait").cancel // PLAY
		]
	}
	
	override processingMissionWithID(mID : UUID) {
		var start : long = System.nanoTime(); // Measure performance
		orderedMissionList.put(mID, missionList.get(mID))
		setSkillIfAbsent(new DetectorPythonTwin(ADN.get.model, ADN.get.platformName, computation_location.get))
		accumulateTime(System.nanoTime - start) 		// Measure performance
	}
}
